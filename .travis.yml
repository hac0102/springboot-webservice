language: java
jdk:
  - openjdk8

#travis ci를 어느 브랜치가 푸시될 때 수행할지 지정
#현재옵션 : 오직 master 브랜치에 push될 때만 수행
branches:
  only:
    - master

# Travis CI 서버의 홈, 그레이들을 통해 의존성을 받게 되면 이를 해당 디렉토리에 캐시하여, 같은 의존성은 다음 배포 때부터 다시 받지 않도록 설정
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'
#master 브랜치에 푸시되었을때 수행하는 명령어, 프로젝트 내부에 둔 gradlew을 통해 clean & build를 수행
script: "./gradlew clean build"


before_deploy:      # deploy가 실행되기전에 수행, codeDeploy는 jar파일은 인식못함 jar+기타 설정파일들을 모아 압축
  - zip -r springboot-webservice *     # 현재 위치의 모든파일을 springboot-webservice 이름으로 .zip 압축
  - mkdir -p deploy                    # deploy라는 디렉토리를 travis ci가 실행중인 위치에서 생성
  - mv springboot-webservice.zip deploy/springboot-webservice.zip

deploy:       # s3로 파일 업로드 또는 CodeDeploy로 배보 등 외부서비스와 연동될 행위를 선언
  - provider: s3
      access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
      secret_access_key: $AWS_SECRET_KEY
      bucket: hac0102-springboot-build
      region: ap-northeast-2
      skip_cleanup: trup
      acl: private # zip 파일 접근을 private로
      local_dir: deploy #before_deploy 에서 생성한 디렉토리, 해당위치의 파일들만 S3로 전송
      wait-until-deployed: true

  #- provider: codedeploy
   #   access_key_id: $AWS_ACCESS_KEY # 트레비스 rep settings 값
    #  secret_access_key: $AWS_SECRET_KEY
     # bucket: hac0102-springboot-build
     # key: springboot-webservice.zip
     # bundle_type: zip
     # application: springboot-webservice
     # deployment_group: springboot-webservice-group
     # region: ap-northeast-2
     # wait-until-deployed: true


#CI 실행 완료 시 메일로 알람
notifications:
  email:
    recipients:
      - hac0102@naver.com